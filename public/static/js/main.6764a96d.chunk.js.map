{"version":3,"sources":["components/Chart/Container.module.css","components/MainNav.js","components/Layout.js","components/PlayerSearch/PlayersList.js","pages/AllPlayers.js","store/playerSlice.js","chartScripts/buildPieChart.js","chartScripts/changePie.js","components/Chart/PieChart.js","chartScripts/buildLineChart.js","chartScripts/changeLineChart.js","components/Chart/LineChart.js","chartScripts/buildPercentileLine.js","chartScripts/changePercentileLine.js","components/Chart/StatInfo.js","components/Chart/Containter.js","components/DashBoard/DashBoard.js","pages/Player.js","chartScripts/resizeCharts.js","App.js","store/store.js","index.js","components/MainNav.module.css","components/Chart/StatInfo.module.css","components/PlayerSearch/PlayersList.module.css","components/Chart/PieChart.module.css","components/Chart/LineChart.module.css","components/Layout.module.css","components/DashBoard/DashBoard.module.css"],"names":["module","exports","MainNav","className","classes","header","nav","to","activeClassName","active","Layout","props","children","PlayersList","players","useSelector","state","player","match","useRouteMatch","history","useHistory","PlayerListLayout","Legend","PlayerList","map","p","i","onClick","name","push","path","style","cursor","teamName","_id","AllPlayers","playerSlice","createSlice","initialState","currentPlayer","playerChartData","reducers","setPlayer","action","payload","setPlayers","setPlayerChartData","newChart","foundChartIndex","findIndex","c","type","playerActions","actions","addLegend","svg","margin","r","w","h","mainArc","data","color","mediaQuery","g","append","attr","spacing","d3","domain","d","range","padding","selectAll","enter","matches","text","label","buildPieChart","id","rawData","selection","transition","stats","byHero","hero","foundStat","find","s","value","filter","container","parseInt","window","matchMedia","Math","min","pie","arcs","transitionTime","inner","outer","arc","innerRadius","outerRadius","labelArc","tweenPie","b","startAngle","endAngle","t","ease","amplitude","period","duration","attrTween","changePieChart","stat","remove","PieChart","dispatch","useDispatch","useState","isLoading","setIsLoading","changePieData","ev","target","options","newStat","selectedIndex","innerText","useEffect","console","log","all","onChange","fill","buildLineChart","m","date","ymd","startTime","split","slice","statValue","transitionEase","maxValue","left","right","top","bottom","xScale","yScale","nice","line","x","y","xAxis","call","yAxis","datum","totalLength","node","getTotalLength","changeLineChart","LineChart","filteredOptions","setFilteredOptions","isloading","changeLineData","filteredOptionsVar","maxStatsIndex","length","forEach","statName","common","RectChart","buildPercentileLine","percentile","tickValues","tickFormat","changePercentileLine","StatInfo","setStat","changeInfoData","statAmount","toFixed","ranking","Container","rowContainer","rowItem","SubContainer","DashBoard","playerHeader","Player","params","useParams","a","fetch","process","res","json","resData","foundPlayer","scrollIntoView","behavior","getPlayerData","resizeCharts","charts","chart","App","onresize","getPlayers","exact","store","configureStore","reducer","playerReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6764a96d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__3ZEv_\",\"SubContainer\":\"Container_SubContainer__2EeP3\",\"rowContainer\":\"Container_rowContainer__1iZ2B\",\"rowItem\":\"Container_rowItem__1VLl0\"};","import { NavLink } from \"react-router-dom\";\nimport classes from \"./MainNav.module.css\";\nconst MainNav = () => {\n  return (\n    <header className={classes.header}>\n      <nav className={classes.nav}>\n        <ul>\n          <li>\n            <NavLink to=\"/about\" activeClassName={classes.active} >\n              About\n            </NavLink>\n          </li>\n          <li>\n            <NavLink to=\"/players\" activeClassName={classes.active}>\n              Players\n            </NavLink>\n          </li>\n        </ul>\n      </nav>\n    </header>\n  );\n};\nexport default MainNav;\n","import { Fragment } from \"react\"\nimport MainNav from \"./MainNav\"\nimport classes from './Layout.module.css'\nconst Layout = (props) => {\n    return (\n        <Fragment>\n            <MainNav/>\n            <main className={classes.Layout}>\n                {props.children}\n            </main>\n        </Fragment>\n    )\n}\nexport default Layout","import classes from \"./PlayersList.module.css\";\nimport { useSelector } from \"react-redux\";\n//import { useMemo } from \"react\";\nimport {useHistory, useRouteMatch } from \"react-router-dom\";\nconst PlayersList = () => {\n  const players = useSelector((state) => state.player.players);\n    const match = useRouteMatch()\n    const history = useHistory()\n    const routePlayerPage = (name) =>{\n        history.push(`${match.path}/${name}`)\n\n    }\n  return (\n    <div className={classes.PlayerListLayout}>\n      <div className={classes.Legend}>\n        <span>Player Name</span>\n        <span>Team Name</span>\n      </div>\n      <ul className={classes.PlayerList}>\n        {players.map((p, i) => (\n          <li key={p._id} onClick={() => {routePlayerPage(p.name)}}>\n           \n            <span style={{ cursor: \"pointer\" }}>{p.name}</span>\n            <span>{p.teamName}</span>\n            \n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\nexport default PlayersList;\n","//import { Route, Switch, useRouteMatch } from \"react-router\";\nimport PlayersList from \"../components/PlayerSearch/PlayersList\";\n\nconst AllPlayers = (props) => {\n    //const match = useRouteMatch()\n    //console.log(match)\n    return (\n        <PlayersList/>\n    )\n}\nexport default AllPlayers;","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst playerSlice = createSlice({\n    name: 'player',\n    initialState: {players: [], currentPlayer: null, playerChartData: []},\n    reducers: {\n        setPlayer(state, action){\n            state.currentPlayer = action.payload\n        },\n        setPlayers(state, action){\n            state.players = action.payload\n        },\n        setPlayerChartData(state, action){\n            const newChart = action.payload\n            const foundChartIndex = state.playerChartData.findIndex(c => c.type === newChart.type)\n            if(foundChartIndex === -1){\n                state.playerChartData.push(newChart)\n            }\n            else{\n                state.playerChartData[foundChartIndex] = newChart\n            }\n        }\n    }\n})\nexport const playerActions = playerSlice.actions;\nexport default playerSlice.reducer;","import * as d3 from \"d3\";\n\nconst getBBox = () => {};\n\nconst buildPieChart = (id, rawData, selection, transition = true) => {\n  const color = [\n    \"#FF6633\",\n    \"#FFB399\",\n    \"#FF33FF\",\n    \"#FFFF99\",\n    \"#00B3E6\",\n    \"#E6B333\",\n    \"#3366E6\",\n    \"#999966\",\n    \"#99FF99\",\n    \"#B34D4D\",\n    \"#80B300\",\n    \"#809900\",\n    \"#E6B3B3\",\n    \"#6680B3\",\n    \"#66991A\",\n    \"#FF99E6\",\n    \"#CCFF1A\",\n    \"#FF1A66\",\n    \"#E6331A\",\n    \"#33FFCC\",\n    \"#66994D\",\n    \"#B366CC\",\n    \"#4D8000\",\n    \"#B33300\",\n    \"#CC80CC\",\n    \"#66664D\",\n    \"#991AFF\",\n    \"#E666FF\",\n    \"#4DB3FF\",\n    \"#1AB399\",\n    \"#E666B3\",\n    \"#33991A\",\n    \"#CC9999\",\n    \"#B3B31A\",\n    \"#00E680\",\n    \"#4D8066\",\n    \"#809980\",\n    \"#E6FF80\",\n    \"#1AFF33\",\n    \"#999933\",\n    \"#FF3380\",\n    \"#CCCC00\",\n    \"#66E64D\",\n    \"#4D80CC\",\n    \"#9900B3\",\n    \"#E64D66\",\n    \"#4DB380\",\n    \"#FF4D4D\",\n    \"#99E6E6\",\n    \"#6666FF\",\n  ];\n  let data = rawData.stats.byHero.map((hero, i) => {\n    const label = hero.name;\n    const foundStat = hero.stats.find((s) => s.name === selection);\n    let value;\n    if (foundStat) {\n      value = foundStat.value;\n    } else {\n      value = 0;\n    }\n\n    return {\n      label,\n      value,\n    };\n  });\n  data = data.filter((d) => d.value !== 0);\n  //console.log(data)\n\n  const container = d3.select(`#${id}`);\n  let svg = container\n    .append(\"svg\")\n    .attr(\"id\", `${id}Svg`)\n    //.attr(\"viewBox\", `0 0 ${w} ${h}`)\n    .attr(\"width\", \"100%\")\n    .attr(\"height\", \"100%\");\n\n  const w = parseInt(d3.select(`#${id}Svg`).style(\"width\"));\n\n  const h = parseInt(d3.select(`#${id}Svg`).style(\"height\"));\n  //I should define global media query\n  const mediaQuery = window.matchMedia(\"(max-width: 900px)\");\n  let margin = 0;\n  //if(mediaQuery.matches) margin = 50\n\n  //max radius that can fit in container\n  //which is why values used in arc functions are fractions of it\n  //to make room for labels and such to fit\n  const r = Math.min(w, h) / 2 - margin;\n\n  //g\n  svg = svg.append(\"g\").attr(\"transform\", `translate(${w / 2}, ${h / 2})`);\n  //const color = d3.schemeCategory10;\n  const pie = d3.pie().value((d) => d.value);\n  const arcs = pie(data);\n  const transitionTime = 1000;\n\n  const mainArc = { inner: r * 0.6, outer: r * 0.95 };\n  const arc = d3.arc().innerRadius(mainArc.inner).outerRadius(mainArc.outer);\n\n  const labelArc = { inner: r * 0.9, outer: r * 0.9 };\n  const outerArc = d3\n    .arc()\n    .innerRadius(labelArc.inner)\n    .outerRadius(labelArc.outer);\n  function tweenPie(b) {\n    let i = d3.interpolate({ startAngle: 0, endAngle: 0 }, b);\n    return function (t) {\n      return arc(i(t));\n    };\n  }\n  if (transition) {\n    svg\n      .selectAll(\"path\")\n      .data(arcs)\n      .enter()\n      .append(\"path\")\n      .attr(\"fill\", (d, i) => color[i])\n      .transition()\n      .ease(d3.easeElasticOut.amplitude(1).period(0.99))\n      .duration(transitionTime)\n      .attrTween(\"d\", tweenPie);\n  } else {\n    svg\n      .selectAll(\"path\")\n      .data(arcs)\n      .enter()\n      .append(\"path\")\n      .attr(\"fill\", (d, i) => color[i])\n      .attr(\"d\", arc);\n  }\n\n  //.attr(\"d\", arc);\n  //https://www.d3-graph-gallery.com/graph/donut_label.html\n  //borrowed this cus labels look so nice here.\n  //addAnnotation(svg, arcs, arc, outerArc, r, transitionTime)\n  addLegend(\n    d3.select(\"svg\"),\n    margin,\n    r,\n    w,\n    h,\n    mainArc,\n    data,\n    color,\n    mediaQuery\n  );\n};\n\nfunction addLegend(svg, margin, r, w, h, mainArc, data, color, mediaQuery) {\n  //Annotations should be based off width only and not height, as they will float right**\n  const g = svg.append(\"g\").attr(\"transform\", `translate(${w / 2}, ${h / 2})`);\n  const spacing = r * 0.1;\n  //width = % of dist from x to w\n  //x=some dist from pie\n  //width = (w/2)-(r*0.99)\n  //x+width = w\n  const distx = w / 2 - r * 0.99;\n  const disty = h / 2;\n  const band = d3\n    .scaleBand()\n    .domain(data.map((d, i) => i))\n    .range([(h / 2) * 0.95, (h / 2) * 0.01])\n    .padding(0.25);\n\n  // g.selectAll('legendRect2')\n  //   .data(data)\n  //   .enter()\n  //   .append('rect')\n  //     .attr('x', (w/2)+(r*0.99))\n  //     .attr('y', (d,i) => band(i))\n  //     .attr('width', Math.min(distx * 0.25, band.bandwidth()))\n  //     .attr('height', band.bandwidth())\n  //     .attr('stroke', '#000')\n  //     .attr('fill', (d,i) => color[i])\n\n  // g.selectAll('legenedLabels2')\n  //   .data(data)\n  //   .enter()\n  //   .append('text')\n  //   .attr('x', (w/2)+(r*0.99)+Math.min(distx * 0.25, band.bandwidth()))\n  //   .attr('y', (d,i) => band(i)+12)\n  //   .attr('font-size', '1vw')\n  //   .text(d => d.label)\n  // .call(wrap, distx)\n\n  g.selectAll(\"legendRects\")\n    .data(data)\n    .enter()\n    .append(\"rect\")\n    .attr(\"x\", r * 0.99)\n    .attr(\"y\", (d, i) => -r * 0.95 + spacing * i)\n    .attr(\"width\", r * 0.08)\n    .attr(\"height\", r * 0.08)\n    .attr(\"stroke-width\", 0.5)\n    .attr(\"stroke\", \"#000\")\n    .attr(\"fill\", (d, i) => color[i]);\n  //console.log(mediaQuery)\n\n  g.selectAll(\"legendLabels\")\n    .data(data)\n    .enter()\n    .append(\"text\")\n    .attr(\"x\", r * 1.08)\n    .attr(\n      \"y\",\n      (d, i) => -r * 0.95 + spacing * i + (mediaQuery.matches ? 5 : 10)\n    )\n    //.attr('font-size', '1.25vw')\n    .attr(\"font-size\", mediaQuery.matches ? \"1.5vh\" : \"1.25vw\")\n    .text((d) => d.label);\n}\n\nfunction addAnnotation(svg, arcs, arc, outerArc, r, transitionTime) {\n  const lines = svg\n    .selectAll(\"annotationLines\")\n    .data(arcs)\n    .enter()\n    .append(\"polyline\")\n    .attr(\"id\", \"annotationLines\")\n    .attr(\"opacity\", 0)\n    .attr(\"stroke\", \"black\")\n    .style(\"fill\", \"none\")\n    .attr(\"stroke-width\", 0.8)\n    .attr(\"points\", function (d) {\n      let posA = arc.centroid(d); // line insertion in the slice\n      let posB = outerArc.centroid(d); // line break: we use the other arc generator that has been built only for that\n      let posC = outerArc.centroid(d); // Label position = almost the same as posB\n      let midangle = d.startAngle + (d.endAngle - d.startAngle) / 2; // we need the angle to see if the X position will be at the extreme right or extreme left\n      posC[0] = r * 0.95 * (midangle < Math.PI ? 1 : -1); // multiply by 1 or -1 to put it on the right or on the left\n      return [posA, posB, posC];\n    })\n    .transition()\n    .duration(transitionTime)\n    .attr(\"opacity\", 1);\n\n  const labels = svg\n    .selectAll(\"annotationLabels\")\n    .data(arcs)\n    .enter()\n    .append(\"text\")\n    .attr(\"id\", \"annotationLabels\")\n    .attr(\"opacity\", 0)\n    .text(function (d) {\n      return d.data.label;\n    })\n    .attr(\"transform\", function (d) {\n      let pos = outerArc.centroid(d);\n      let midangle = d.startAngle + (d.endAngle - d.startAngle) / 2;\n\n      pos[0] = r * 0.99 * (midangle < Math.PI ? 1 : -1);\n      return \"translate(\" + pos + \")\";\n    })\n    .style(\"text-anchor\", function (d) {\n      let midangle = d.startAngle + (d.endAngle - d.startAngle) / 2;\n      return midangle < Math.PI ? \"start\" : \"end\";\n    })\n    .transition()\n    .duration(transitionTime)\n    .attr(\"opacity\", 1);\n}\nfunction wrap(text, width) {\n  text.each(function () {\n    var text = d3.select(this),\n      words = text.text().split(/\\s+/).reverse(),\n      word,\n      line = [],\n      lineNumber = 0,\n      lineHeight = 1.1, // ems\n      x = text.attr(\"x\"),\n      y = text.attr(\"y\"),\n      dy = 0, //parseFloat(text.attr(\"dy\")),\n      tspan = text\n        .text(null)\n        .append(\"tspan\")\n        .attr(\"x\", x)\n        .attr(\"y\", y)\n        .attr(\"dy\", dy + \"em\");\n    while ((word = words.pop())) {\n      line.push(word);\n      tspan.text(line.join(\" \"));\n      if (tspan.node().getComputedTextLength() > width) {\n        line.pop();\n        tspan.text(line.join(\" \"));\n        line = [word];\n        tspan = text\n          .append(\"tspan\")\n          .attr(\"x\", x)\n          .attr(\"y\", y)\n          .attr(\"dy\", ++lineNumber * lineHeight + dy + \"em\")\n          .text(word);\n      }\n    }\n  });\n}\n\nexport default buildPieChart;\n","import * as d3 from 'd3'\nimport buildPieChart from './buildPieChart.js'\nconst changePieChart = (id, rawData, stat)=>{\n    const container = d3.select(`#${id}`);\n    container.selectAll('svg').remove()\n    buildPieChart(id, rawData, stat)\n    /* \n    .join(\n        enter, for new stat\n        update, no need\n        exit for old stat\n    )\n    */\n}\nexport default changePieChart","import {useEffect, useState } from \"react\";\nimport classes from \"./PieChart.module.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\n//import { chartActions } from \"../../store/chartSlice\";\nimport buildPieChart from \"../../chartScripts/buildPieChart.js\";\nimport changePieChart from \"../../chartScripts/changePie.js\";\n//import buildLineChart from \"../../chartScripts/buildLineChart\";\nimport { playerActions } from \"../../store/playerSlice.js\";\n\n\nconst PieChart = (props) => {\n  const dispatch = useDispatch();\n  const player = useSelector((state) => state.player.currentPlayer);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const options = () => {\n    return (\n      <select onChange={changePieData}>\n        {player.stats.all.map((stat, i) => {\n          return <option key={`pieChartOption${i}`}>{stat.name}</option>;\n        })}\n      </select>\n    );\n  };\n\n  function changePieData(ev) {\n    const s = ev.target.options;\n    //console.log(s[s.selectedIndex].innerText);\n    const newStat = s[s.selectedIndex].innerText;\n    changePieChart(props.id, player, newStat);\n    dispatch(\n      playerActions.setPlayerChartData({\n        id: props.id,\n        data: player,\n        selection: newStat,\n        type: \"pie\",\n      })\n    );\n  }\n  useEffect(() => {\n    //console.log(player);\n    if (player !== null) {\n      console.log(player);\n      setIsLoading(false);\n      buildPieChart(props.id, player, player.stats.all[0].name);\n      dispatch(\n        playerActions.setPlayerChartData({\n          id: props.id,\n          data: player,\n          selection: player.stats.all[0].name,\n          type: \"pie\",\n        })\n      );\n    }\n  }, [dispatch, props.id, player]);\n\n  return (\n    <div className={classes.PieChart}>\n      {isLoading && <div>Loading...</div>}\n      {!isLoading && (\n        <div className={classes.filter}>\n          <span>General Stats By Hero </span>\n          {options()}\n        </div>\n      )}\n      <div className={classes.fill} id={props.id}></div>\n    </div>\n  );\n};\nexport default PieChart;\n","import * as d3 from \"d3\";\nconst buildLineChart = (id, rawData, selection, transition) => {\n  //const selection = 'All Damage Done'\n  const mediaQuery = window.matchMedia(\"(max-width: 700px)\");\n  const data = rawData.map((m) => {\n    //const date = m.startTime.split(' ')[0]\n    const ymd = m.startTime.split(\" \")[0].split(\"-\");\n    let date;\n    date = `${ymd[1]}/${ymd[2]}/${ymd[0]}`;\n\n    if (mediaQuery.matches) {\n      //make date in shorter format for mobile\n      date = `${parseInt(ymd[1])}/${parseInt(ymd[2])}/${ymd[0].slice(0, 2)}`;\n    }\n    const statValue = m.stats.all.find((s) => s.name === selection).value;\n    return { date, statValue: parseInt(statValue, 10) };\n  });\n  //console.log(data)\n  //const rawData =\n  //const data = [5, 3, 1, 4, 5, 10, 30, 13, 8, 9];\n  const transitionTime = 1000;\n  const transitionEase = d3.easeQuadOut;\n\n  //idea for adding players to line chart for comparison\n  //need to reevaluate yscale max and transition y axis to grow if needed\n  //then do cool path offset animation to bring it in\n  const container = d3.select(`#${id}`);\n  //implement animated, over time chart starting with range start then\n  //adding dates every second or so until range end\n  const svg = container\n    .append(\"svg\")\n    .attr(\"id\", `${id}Svg`)\n    //.attr(\"viewBox\", `0 0 ${w} ${h}`)\n    .attr(\"width\", \"100%\")\n    .attr(\"height\", \"100%\");\n\n  const w = parseInt(d3.select(`#${id}Svg`).style(\"width\"));\n\n  const h = parseInt(d3.select(`#${id}Svg`).style(\"height\"));\n\n  const maxValue = d3.max(data, (d) => d.statValue);\n\n  const margin = {\n    left: maxValue > 1000 ? 50 : 35,\n    right: 25,\n    top: 10,\n    bottom: h*0.1,\n  };\n  let xScale = d3\n    .scalePoint()\n    .domain(data.map((d) => d.date))\n    .range([margin.left, w - margin.right]);\n  let yScale = d3\n    .scaleLinear()\n    .domain([0, maxValue])\n    .range([h - margin.bottom, margin.top])\n    .nice();\n\n  // let xScale = d3\n  //   .scaleLinear()\n  //   .domain([0, data.length - 1])\n  //   .range([margin.left, w - margin.right]);\n  // let yScale = d3\n  //   .scaleLinear()\n  //   .domain([0, d3.max(data, (d) => d)])\n  //   .range([h - margin.bottom, margin.top]);\n  //console.log(xScale(\"2021-04-17 22:45:31\"))\n  const line = d3\n    .line()\n    .x((d, i) => xScale(d.date))\n    .y((d, i) => yScale(d.statValue));\n  let xAxis = svg\n    .append(\"g\")\n    .attr(\"id\", \"xAxis\")\n    .attr(\"transform\", `translate(${0}, ${h - margin.bottom})`)\n    .call(d3.axisBottom(xScale));\n\n  let yAxis = svg\n    .append(\"g\")\n    .attr(\"id\", \"yAxis\")\n    .attr(\"transform\", `translate(${margin.left}, ${0})`)\n    .call(d3.axisLeft(yScale));\n\n  //make line color, team color in the future\n  let path = svg\n    .append(\"path\")\n    .attr(\"id\", \"path\")\n    .datum(data)\n    .attr(\"fill\", \"none\")\n    .attr(\"stroke\", \"#FF1A66\")\n    .attr(\"stroke-width\", \"1\")\n    .attr(\"d\", line);\n  const totalLength = path.node().getTotalLength();\n  if (transition) {\n    xAxis\n      .attr(\"opacity\", 0)\n      .transition()\n      .duration(transitionTime)\n      .attr(\"opacity\", 1);\n    yAxis\n      .attr(\"opacity\", 0)\n      .transition()\n      .duration(transitionTime)\n      .attr(\"opacity\", 1);\n    path\n      .attr(\"stroke-dasharray\", totalLength + \" \" + totalLength)\n      .attr(\"stroke-dashoffset\", totalLength)\n      .transition()\n      .duration(transitionTime)\n      .ease(transitionEase)\n      .attr(\"stroke-dashoffset\", 0);\n  }\n};\nexport default buildLineChart;\n","import * as d3 from 'd3'\nimport buildLineChart from './buildLineChart'\n\nconst changeLineChart = (id, data, stat, transition) => {\n    const container = d3.select(`#${id}`);\n    container.selectAll('svg').remove()\n    buildLineChart(id, data, stat, transition)\n    \n\n}\nexport default changeLineChart","import { useEffect, useState } from \"react\";\nimport * as d3 from \"d3\";\nimport classes from \"./LineChart.module.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\n//import { chartActions } from \"../../store/chartSlice\";\nimport { playerActions } from \"../../store/playerSlice.js\";\n//import { Delaunay } from \"d3-delaunay\";\nimport buildLineChart from \"../../chartScripts/buildLineChart.js\";\nimport changeLineChart from \"../../chartScripts/changeLineChart.js\";\n\nconst LineChart = (props) => {\n  const dispatch = useDispatch();\n  const player = useSelector((state) => state.player.currentPlayer);\n  const [filteredOptions, setFilteredOptions] = useState([]);\n  const [isloading, setIsLoading] = useState(true);\n\n  function changeLineData(ev) {\n    const s = ev.target.options;\n\n    const newStat = s[s.selectedIndex].innerText;\n    changeLineChart(props.id, player.matches, newStat, true);\n    dispatch(\n      playerActions.setPlayerChartData({\n        id: props.id,\n        data: player.matches,\n        selection: newStat,\n        type: \"line\",\n      })\n    );\n  }\n\n  const options = () => {\n    return (\n      <select onChange={changeLineData}>\n        {filteredOptions.map((stat, i) => {\n          return <option key={`lineChartOption${i}`}>{stat}</option>;\n        })}\n      </select>\n    );\n  };\n\n  useEffect(() => {\n    if (player !== null) {\n      let filteredOptionsVar = [];\n      //not all matches share the same number of stats\n      //this doesn't work for whats supposed to be a 'continous' plot of match stat data\n      //so i need to find stats that all matches have in common, so i can plot them over time/over matches\n      //i should try to add another property from my backend transformation of the data for this\n      const maxStatsIndex = player.matches.findIndex(\n        (m) =>\n          m.stats.all.length ===\n          d3.max(player.matches, (d) => d.stats.all.length)\n      );\n      player.matches[maxStatsIndex].stats.all.forEach((s) => {\n        let statName = s.name;\n\n        let common = true;\n        for (let i = 0; i < player.matches.length; i++) {\n          if (i === maxStatsIndex) {\n            continue;\n          }\n          const found = player.matches[i].stats.all.find(\n            (s) => s.name === statName\n          );\n          if (!found) {\n            common = false;\n            break;\n          }\n        }\n        if (common) {\n          filteredOptionsVar.push(statName);\n        }\n      });\n      buildLineChart(props.id, player.matches, filteredOptionsVar[0], true);\n      setIsLoading(false);\n      //console.log(filteredOptionsVar);\n      setFilteredOptions(filteredOptionsVar);\n      //might change data, since player state already contains player data\n      dispatch(\n        playerActions.setPlayerChartData({\n          id: props.id,\n          data: player.matches,\n          selection: filteredOptionsVar[0],\n          type: \"line\",\n        })\n      );\n      //console.log(filteredOptions)\n      //console.log(maxStatsIndex);\n    }\n\n    // dispatch(\n    //   chartActions.addChartVars({ data, id: props.id, margin, type: \"line\" })\n    // );\n  }, [props.id, dispatch, player]);\n\n  return (\n    <div className={classes.RectChart}>\n      {isloading && <div>Loading...</div>}\n      {!isloading && (\n        <div className={classes.filter}>\n          <span>General Stats - By Match </span>\n          {options()}\n        </div>\n      )}\n      <div className={classes.fill} id={props.id}></div>\n    </div>\n  );\n};\nexport default LineChart;\n","import * as d3 from \"d3\";\nconst buildPercentileLine = (id, percentile, transition = true) => {\n  const container = d3.select(`#${id}`);\n\n  const svg = container\n    .append(\"svg\")\n    .attr(\"id\", `${id}Svg`)\n    .attr(\"width\", \"100%\")\n    .attr(\"height\", \"100%\");\n\n  const w = parseInt(d3.select(`#${id}Svg`).style(\"width\"));\n\n  //const h = parseInt(d3.select(`#${id}Svg`).style(\"height\"));\n\n  const r = w * 0.015; //Math.min(w, h) * 0.5\n\n  const margin = { left: 20, right: 20, top: 20, bottom: 20 };\n\n  let xScale = d3\n    .scaleLinear()\n    .domain([0, 100])\n    .range([margin.left, w - margin.right]);\n\n  let xAxis = svg\n    .append(\"g\")\n    .attr(\"id\", \"xAxisPercentile\")\n    .attr(\"transform\", `translate(${0}, ${margin.top})`)\n    .call(\n      d3\n        .axisBottom(xScale)\n        .tickValues([0, 25, 50, 75, 100])\n        .tickFormat((d) => `${d}%`)\n    );\n  svg\n    .append(\"circle\")\n    .attr(\"cx\", xScale(percentile * 100))\n    .attr(\"cy\", margin.top)\n    .attr(\"r\", r)\n    .attr(\"fill\", \"#8bc\");\n};\nexport default buildPercentileLine;\n","import buildPercentileLine from \"./buildPercentileLine\"\nimport * as d3 from 'd3'\nconst changePercentileLine = (id, percentile) => {\n    const container = d3.select(`#${id}`);\n    container.selectAll('svg').remove()\n    buildPercentileLine(id, percentile);\n}\n\nexport default changePercentileLine;","import { Fragment } from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport buildPercentileLine from \"../../chartScripts/buildPercentileLine\";\nimport classes from \"./StatInfo.module.css\";\nimport * as d3 from \"d3\";\nimport changePercentileLine from \"../../chartScripts/changePercentileLine\";\nimport { playerActions } from \"../../store/playerSlice.js\";\n\nconst StatInfo = (props) => {\n  const player = useSelector((state) => state.player.currentPlayer);\n  const [isLoading, setIsLoading] = useState(true);\n  const [stat, setStat] = useState(0);\n  const dispatch = useDispatch();\n  function changeInfoData(ev) {\n    const s = ev.target.options;\n    //console.log(s[s.selectedIndex].innerText);\n    //const newStat = s[s.selectedIndex].innerText;\n    setStat(player.stats.all[s.selectedIndex]);\n    changePercentileLine(\n      props.id,\n      player.stats.all[s.selectedIndex].percentile\n    );\n    dispatch(\n      playerActions.setPlayerChartData({\n        id: props.id,\n        data: player.stats.all[s.selectedIndex].percentile,\n        type: \"percentile\",\n      })\n    );\n    //changePieChart(props.id, player, newStat);\n  }\n  const info = () => {\n    return (\n      <Fragment>\n        <div className={classes.statAmount}>\n          {d3.format(\",\")(stat.value.toFixed(0))}\n        </div>\n        {/* <div>League average: xxx</div> */}\n        <div>Rank: {stat.ranking}</div>\n        <div>{`${stat.percentile * 100}`.split(\".\")[0]} percentile</div>\n      </Fragment>\n    );\n  };\n  const options = () => {\n    return (\n      <select onChange={changeInfoData}>\n        {player.stats.all.map((stat, i) => {\n          return <option key={`statInfoOption${i}`}>{stat.name}</option>;\n        })}\n      </select>\n    );\n  };\n\n  useEffect(() => {\n    if (player !== null) {\n      setStat(player.stats.all[0]);\n      buildPercentileLine(props.id, player.stats.all[0].percentile);\n      dispatch(\n        playerActions.setPlayerChartData({\n          id: props.id,\n          data: player.stats.all[0].percentile,\n          type: \"percentile\",\n        })\n      );\n      setIsLoading(false);\n    }\n  }, [props.id, player, dispatch]);\n\n  return (\n    <div className={classes.container}>\n      {isLoading && <div>Loading...</div>}\n      {!isLoading && (\n        <div className={classes.filter}>\n          <span>General Stats By Hero </span>\n          {options()}\n        </div>\n      )}\n      <div className={classes.fill}>\n        {!isLoading && info()}\n        <div id={props.id}></div>\n      </div>\n    </div>\n  );\n};\nexport default StatInfo;\n","import classes from \"./Container.module.css\";\r\nimport PieChart from \"./PieChart\";\r\nimport LineChart from \"./LineChart\";\r\nimport StatInfo from \"./StatInfo\";\r\nconst Container = (props) => {\r\n  // const containerRef = useRef(null)\r\n  //  useEffect(() => {\r\n  //   containerRef.current.scrollIntoView({behavior: 'smooth'})\r\n  //  })\r\n\r\n  //pie chart dropdown menu\r\n  //All matches(or select match) -> All maps(or select map) -> Stat\r\n\r\n  //Line chart dropdown menu\r\n  //By matches(ticks are matches only) or By maps(ticks show matches with maps in between, or some other cool way)\r\n  return (\r\n    <div className={classes.Container}>\r\n      <div className={classes.rowContainer}>\r\n        <div className={classes.rowItem}>\r\n          <PieChart id=\"pieChart\" />\r\n        </div>\r\n        <div className={classes.rowItem}>\r\n          <StatInfo id=\"pLine\" />\r\n        </div>\r\n      </div>\r\n\r\n      <div className={classes.SubContainer}>\r\n        <LineChart id=\"lineChart\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Container;\r\n","import { Fragment, useEffect } from \"react\"\nimport Container from \"../Chart/Containter\"\nimport classes from './DashBoard.module.css'\nimport * as d3 from 'd3'\nconst DashBoard = (props) => {\n    //put charts into div\n    useEffect(() => {\n        //to ensure svgs are erased on each player dashboard\n        d3.selectAll('svg').remove()\n    }, [])\n    return (\n        <Fragment>\n            <div className={classes.playerHeader}>{props.name}</div>\n            <Container/>\n        </Fragment>\n    )\n}\nexport default DashBoard","import { useEffect} from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useParams } from \"react-router\";\nimport DashBoard from \"../components/DashBoard/DashBoard\";\nimport * as d3 from 'd3'\nimport {playerActions} from '../store/playerSlice.js';\n//on data loading show modal and scroll to bottom\nconst Player = (props) => {\n    const params = useParams()\n    const dispatch = useDispatch()\n    //const [isLoading, setIsLoading] = useState(true)\n    //const [playerData, setPlayerData] = useState(null)\n    useEffect(() => {\n    \n        const getPlayerData = async () =>{\n          const res = await fetch(`${process.env.REACT_APP_DOMAIN}api/v1/players/${params.name}`)\n          const resData = await res.json()\n          //dispatch(playerActions.setPlayers(resData.players))\n          //setPlayerData(resData.foundPlayer)\n          dispatch(playerActions.setPlayer(resData.foundPlayer))\n          //console.log(resData.foundPlayer)\n          d3.select('#lineChart').node().scrollIntoView({behavior: 'smooth'})\n        }\n        getPlayerData()\n        \n        \n      }, [dispatch, params.name])\n\n      // useEffect(() => {\n      //   d3.select('#rectDiv3').node().scrollIntoView({behavior: 'smooth'})\n      //   setIsLoading(false)\n      // }, [isLoading])\n    return (\n        <div>\n            {/* Player Page for {params.name} */}\n            \n            <DashBoard name={params.name}/>\n        </div>\n       \n        \n    )\n}\nexport default Player;","\nimport * as d3 from 'd3'\nimport buildLineChart from \"./buildLineChart.js\"\nimport buildPercentileLine from './buildPercentileLine.js';\nimport buildPieChart from './buildPieChart.js';\n//small thing to add, make it scroll to bottom on resize\n\n/**\n * Resizes all charts given list of objects containing relevant chart information\n * @param {Object} charts - array of objects containing chart information\n */\nconst resizeCharts = (charts) => {\n    for(const chart of charts){\n        //console.log(chart)\n        const container = d3.select(`#${chart.id}`);\n        container.selectAll('svg').remove()\n        if(chart.type === 'line'){\n            buildLineChart(chart.id, chart.data, chart.selection, false)\n        }\n        if(chart.type === 'pie'){\n            buildPieChart(chart.id, chart.data, chart.selection, false)\n        }\n        if(chart.type === 'percentile'){\n            buildPercentileLine(chart.id, chart.data, false)\n        }\n    }\n    //centers screen on container on resize, looks weird if im scrolled at the top then it 'snaps' down\n    //d3.select('#lineChart').node().scrollIntoView()\n    \n    \n}\nexport default resizeCharts\n","import {Route, Switch, Redirect} from 'react-router-dom';\n\nimport './App.css';\nimport { useEffect} from 'react';\nimport Layout from './components/Layout';\nimport AllPlayers from './pages/AllPlayers';\nimport {playerActions} from './store/playerSlice.js';\nimport {useDispatch, useSelector} from 'react-redux';\nimport Player from './pages/Player';\nimport resizeCharts from './chartScripts/resizeCharts.js';\nfunction App() {\n  const dispatch = useDispatch()\n  const charts = useSelector(state => state.player.playerChartData)\n  useEffect(() => {\n    window.onresize = () => {resizeCharts(charts)}\n  }, [charts])\n  useEffect(() => {\n    \n    const getPlayers = async () =>{\n      const res = await fetch(`${process.env.REACT_APP_DOMAIN}api/v1/players/all`)\n      const resData = await res.json()\n      dispatch(playerActions.setPlayers(resData.players))\n      console.log(resData)\n      \n    }\n    getPlayers()\n    \n  }, [dispatch])\n\n  return (\n    <Layout>\n    <Switch>\n      <Route path=\"/\" exact>\n        <Redirect to=\"players\"/>\n      </Route>\n      <Route path=\"/players\" exact>\n        <AllPlayers/>\n      </Route>\n      <Route path=\"/players/:name\">\n        <Player/>\n      </Route>\n      <Route path=\"/about\">\n\n      </Route>\n      <Route path='*'>\n\n      </Route>\n    </Switch>\n  </Layout>\n  )\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport playerReducer from \"./playerSlice.js\";\n\nconst store = configureStore({reducer: {player: playerReducer}})\nexport default store;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n//import reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store/store.js\";\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNav_header__2251v\",\"nav\":\"MainNav_nav__1ovUG\",\"active\":\"MainNav_active__3zBFd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"StatInfo_container__3PTip\",\"statAmount\":\"StatInfo_statAmount__1qqv5\",\"fill\":\"StatInfo_fill__2ABpX\",\"filter\":\"StatInfo_filter__1vFWr\",\"frag\":\"StatInfo_frag__7Ecxk\",\"pLine\":\"StatInfo_pLine__2Ai4T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PlayerListLayout\":\"PlayersList_PlayerListLayout__1R6Ts\",\"Legend\":\"PlayersList_Legend__gOdRd\",\"PlayerList\":\"PlayersList_PlayerList__ZF2e4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PieChart\":\"PieChart_PieChart__1uywb\",\"fill\":\"PieChart_fill__2EOnJ\",\"filter\":\"PieChart_filter__3C0Rd\",\"test\":\"PieChart_test__1E6Nx\",\"test2\":\"PieChart_test2__XLMxl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"RectChart\":\"LineChart_RectChart__2rAhs\",\"fill\":\"LineChart_fill__GCINh\",\"filter\":\"LineChart_filter__9BMcQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__1cR-P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"playerHeader\":\"DashBoard_playerHeader__ikJBa\"};"],"sourceRoot":""}